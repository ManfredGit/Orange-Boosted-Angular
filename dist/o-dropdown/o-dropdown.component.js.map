{"version":3,"sources":["../../src/o-dropdown/o-dropdown.component.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAAE,SAAA,EAAW,YAAA,EAAc,UAAA,EAA0B,MAAO,eAAA,CAAgB;AAGnF;IAGI,4BAAoB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;IAAI,CAAC;IAEnC,4CAAe,GAAtB;QACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;IACvF,CAAC;IAGO,gDAAmB,GAA3B,UAA4B,WAAW;QAAvC,iBAMC;QALG,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YACd,UAAU,CAAC;gBACP,KAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,KAAK,EAAE,CAAC;YAChD,CAAC,CAAC,CAAC;QACP,CAAC;IACL,CAAC;IACG,6BAAU,GAA0B;QAC5C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACtB,QAAQ,EAAE,eAAe,CAAG,2DAA2D;iBAC1F,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,iCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,UAAU,GAAG;KACnB,EAF6F,CAE7F,CAAC;IACK,iCAAc,GAA2C;QAChE,qBAAqB,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,EAAG,EAAE,EAAE;KACnF,CAAC;IACF,yBAAC;CA7BD,AA6BC,IAAA;SA7BY,kBAAkB","file":"o-dropdown.component.js","sourceRoot":"","sourcesContent":["/*!\r\n * --------------------------------------------------------------------------\r\n * Ng-boosted - o-dropdown.component.ts\r\n * copyright 2017 Orange SA\r\n * Licensed under MIT (https://github.com/Orange-OpenSource/ng-boosted/blob/master/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport { Directive, HostListener, ElementRef, AfterViewInit } from '@angular/core';\r\n\r\n\r\nexport class ODropdownComponent implements AfterViewInit {\r\n    private dropdownMenu: any;\r\n\r\n    constructor(private elRef: ElementRef) { }\r\n\r\n    public ngAfterViewInit() {\r\n        this.dropdownMenu = this.elRef.nativeElement.querySelectorAll('.dropdown-menu')[0];\r\n    }\r\n\r\n    \r\n    private handleDropdownFocus(isOpenEvent) {\r\n        if (isOpenEvent) {\r\n            setTimeout(() => {\r\n                this.dropdownMenu.firstElementChild.focus();\r\n            });\r\n        }\r\n    }\r\n static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[ngbDropdown]'   // using same selector as ng-bootsrap NgbDropdown directive\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'handleDropdownFocus': [{ type: HostListener, args: ['openChange', ['$event'], ] },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}