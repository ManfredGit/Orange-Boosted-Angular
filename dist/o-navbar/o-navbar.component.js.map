{"version":3,"sources":["../../src/o-navbar/o-navbar.component.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,OAAO,EAEL,SAAS,EACT,KAAK,EACL,WAAW,EAEX,SAAS,EAEV,MAAM,eAAA,CAAgB;AAEvB,IAAM,YAAA,GAAe,oBAAA,CAAqB;AAG1C;IAAA;QAYS,aAAQ,GAAG,KAAK,CAAC;IAuB1B,CAAC;IArBQ,4BAAS,GAAhB;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACvE,CAAC;IACI,mBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,2NAIT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,uBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,uBAAc,GAA2C;QAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,gBAAgB,EAAG,EAAE,EAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7E,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,MAAM,EAAG,EAAE,EAAE;KAC/C,CAAC;IACF,eAAC;CAnCD,AAmCC,IAAA;SAnCY,QAAQ;AAsCrB;IAAA;IA8BA,CAAC;IAtBM,mBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,gBAAgB;oBAC1B,MAAM,EAAE,CAAC,oDAIR,CAAC;oBACF,QAAQ,EAAE,qMAIT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,uBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,uBAAc,GAA2C;QAChE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,gBAAgB,EAAG,EAAE,EAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACjF,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC1B,CAAC;IACF,eAAC;CA9BD,AA8BC,IAAA;SA9BY,QAAQ;AAiCrB;IAAA;QACS,YAAO,GAAG,YAAY,CAAC;QAEvB,gBAAW,GAAG,IAAI,CAAC;IAqD5B,CAAC;IAxCM,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,UAAU;oBACpB,MAAM,EAAE,CAAC,2FAMR,CAAC;oBACF,QAAQ,EAAE,y6BAkBT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,+BAAc,GAA2C;QAChE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC/B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAChC,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC/B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC/B,CAAC;IACF,uBAAC;CAxDD,AAwDC,IAAA;SAxDY,gBAAgB","file":"o-navbar.component.js","sourceRoot":"","sourcesContent":["/*!\r\n * --------------------------------------------------------------------------\r\n * Ng-boosted - o-navbar.component.ts\r\n * copyright 2017 Orange SA\r\n * Licensed under MIT (https://github.com/Orange-OpenSource/ng-boosted/blob/master/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport {\r\n  Directive,\r\n  Component,\r\n  Input,\r\n  HostBinding,\r\n  ElementRef,\r\n  ViewChild,\r\n  DoCheck\r\n} from '@angular/core';\r\n\r\nconst TEST_PATTERN = /xs|sm|md|lg|xl|xxl/;\r\n\r\n\r\nexport class ONavLink implements DoCheck {\r\n  \r\n\r\n  \r\n  public route: string;\r\n\r\n  \r\n  public title: string;\r\n\r\n  \r\n  public link: ElementRef;\r\n\r\n  public isActive = false;\r\n\r\n  public ngDoCheck() {\r\n    this.isActive = this.link.nativeElement.classList.contains('active');\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'li[o-nav-link]',\r\n  template: `\r\n    <a #link [routerLink]=\"route\" class=\"nav-link\" routerLinkActive=\"active\"\r\n     [attr.title]=\"title === 'undefined' ? null : title\"\r\n     [attr.aria-current]=\"isActive\"><ng-content></ng-content></a>\r\n  `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'route': [{ type: HostBinding, args: ['class.nav-item', ] },{ type: Input },],\n'title': [{ type: Input },],\n'link': [{ type: ViewChild, args: ['link', ] },],\n};\n}\r\n\r\n\r\nexport class ONavMenu {\r\n  \r\n\r\n  \r\n  public menuTitle: string;\r\n\r\n  \r\n  public title: string;\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'li[o-nav-menu]',\r\n  styles: [`\r\n    a:hover {\r\n      cursor: pointer;\r\n    }\r\n  `],\r\n  template: `\r\n    <a class=\"nav-link\" ngbDropdownToggle [attr.title]=\"title === 'undefined' ? null : title\"\r\n    (click)=\"$event.stopPropagation();\">{{menuTitle}}</a>\r\n    <ng-content></ng-content>\r\n  `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'menuTitle': [{ type: HostBinding, args: ['class.nav-item', ] },{ type: Input },],\n'title': [{ type: Input },],\n};\n}\r\n\r\n\r\nexport class ONavbarComponent {\r\n  public pattern = TEST_PATTERN;\r\n\r\n  public isCollapsed = true;\r\n\r\n  \r\n  public homeRoute: string;\r\n\r\n  \r\n  public breakpoint: string;\r\n\r\n  \r\n  public brandPath: string;\r\n\r\n  \r\n  public brandLabel: string;\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'o-navbar',\r\n  styles: [`\r\n    .navbar-nav { width: 100%;}\r\n\r\n    >>> a:hover {\r\n      cursor: pointer;\r\n    }\r\n  `],\r\n  template: `\r\n    <nav [class]=\"'navbar navbar-dark bg-dark ' +\r\n     (pattern.test(breakpoint) ? 'navbar-expand-'+breakpoint : 'navbar-toggleable-sm')\" role=\"navigation\">\r\n        <div class=\"container\">\r\n            <a class=\"navbar-brand logo\" [routerLink]=\"homeRoute\">\r\n                <img [attr.src]=\"brandPath\" [attr.alt]=\"brandLabel\" [attr.title]=\"brandLabel\">\r\n            </a>\r\n            <button class=\"navbar-toggler\" type=\"button\" (click)=\"isCollapsed = !isCollapsed\"\r\n              [attr.aria-expanded]=\"!isCollapsed\" aria-controls=\"collapsingNavbarHead\">\r\n              <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"navbar-collapse collapse\" id=\"collapsingNavbarHead\" [ngbCollapse]=\"isCollapsed\">\r\n              <ul class=\"navbar-nav\">\r\n                <ng-content></ng-content>\r\n              </ul>\r\n            </div>\r\n        </div>\r\n    </nav>\r\n  `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'homeRoute': [{ type: Input },],\n'breakpoint': [{ type: Input },],\n'brandPath': [{ type: Input },],\n'brandLabel': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}