{"version":3,"sources":["../../src/o-switch/o-switch.component.ts"],"names":[],"mappings":"AAAA;;;;;GAKG;AAEH,OAAO,EACL,SAAS,EACT,KAAK,EACL,WAAW,EACZ,MAAM,eAAA,CAAgB;AAGvB;IAAA;QAOS,YAAO,GAAG,KAAK,CAAC;QAGhB,YAAO,GAAG,KAAK,CAAC;QAGhB,iBAAY,GAAG,KAAK,CAAC;QAGrB,gBAAW,GAAG,MAAM,CAAC;QAGrB,YAAO,GAAG,IAAI,CAAC;QAGf,aAAQ,GAAG,KAAK,CAAC;IA0B1B,CAAC;IAzBM,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,UAAU;oBACpB,QAAQ,EAAE,mmBAOT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,+BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,+BAAc,GAA2C;QAChE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,gBAAgB,EAAG,EAAE,EAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC/E,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAClC,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACjC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC7B,CAAC;IACF,uBAAC;CAhDD,AAgDC,IAAA;SAhDY,gBAAgB","file":"o-switch.component.js","sourceRoot":"","sourcesContent":["/*!\r\n * --------------------------------------------------------------------------\r\n * Ng-boosted - o-switch.component.ts\r\n * Licensed under MIT (https://github.com/Orange-OpenSource/ng-boosted/blob/master/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport {\r\n  Component,\r\n  Input,\r\n  HostBinding\r\n} from '@angular/core';\r\n\r\n\r\nexport class OSwitchComponent {\r\n  \r\n\r\n  \r\n  public inputId: string;\r\n\r\n  \r\n  public toggled = false;\r\n\r\n  \r\n  public rounded = false;\r\n\r\n  \r\n  public successColor = false;\r\n\r\n  \r\n  public customWidth = 'auto';\r\n\r\n  \r\n  public onLabel = 'on';\r\n\r\n  \r\n  public offLabel = 'off';\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'o-switch',\r\n  template: `\r\n      <input class=\"checkbox sr-only\" [class.success]=\"successColor\" [id]=\"inputId\" type=\"checkbox\" [checked]=\"toggled\"/>\r\n      <label [for]=\"inputId\" class=\"toggle form-control-label\" [class.toggle-rounded]=\"rounded\" aria-hidden=\"true\"\r\n      [ngStyle]=\"{'width': customWidth}\">\r\n        <span class=\"on\" [class.svg-checkbox-tick]=\"onLabel === 'on'\"><span [class.sr-only]=\"onLabel === 'on'\">{{onLabel}}</span></span>\r\n        <span class=\"off\" [class.svg-delete]=\"offLabel === 'off'\"><span [class.sr-only]=\"offLabel === 'off'\">{{offLabel}}</span></span>\r\n      </label>\r\n  `\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'inputId': [{ type: HostBinding, args: ['class.o-switch', ] },{ type: Input },],\n'toggled': [{ type: Input },],\n'rounded': [{ type: Input },],\n'successColor': [{ type: Input },],\n'customWidth': [{ type: Input },],\n'onLabel': [{ type: Input },],\n'offLabel': [{ type: Input },],\n};\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}